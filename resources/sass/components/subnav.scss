// Name:            Subnav
// Description:     Component to create a sub navigation
//
// Component:       `uk-subnav`
//
// Modifiers:       `uk-subnav-divider`
//                  `uk-subnav-pill`
//
// States:          `uk-active`
//                  `uk-first-column`
//
// ========================================================================

// Variables
// ========================================================================

/* ========================================================================
   Component: Subnav
 ========================================================================== */

/*
 * 1. Allow items to wrap into the next line
 * 2. Gutter
 * 3. Reset list
 */

.uk-subnav {
    display: flex;
    /* 1 */
    flex-wrap: wrap;
    /* 2 */
    margin-left: (-$subnav-margin-horizontal);
    /* 3 */
    padding: 0;
    list-style: none;
    @if (mixin-exists(hook-subnav)) {
        @include hook-subnav();
    }
}

/*
 * 1. Space is allocated solely based on content dimensions: 0 0 auto
 * 2. Gutter
 * 3. Create position context for dropdowns
 */

.uk-subnav > * {
    /* 1 */
    flex: none;
    /* 2 */
    padding-left: $subnav-margin-horizontal;
    /* 3 */
    position: relative;
}

/* Items
 ========================================================================== */

/*
 * Items must target `a` elements to exclude other elements (e.g. dropdowns)
 * Using `:first-child` instead of `a` to support `span` elements for text
 * 1. Prevent gap if child element is `inline-block`, e.g. an icon
 * 2. Style
 */

.uk-subnav > * > :first-child {
    /* 1 */
    display: block;
    /* 2 */
    color: $subnav-item-color;
    @if (mixin-exists(hook-subnav-item)) {
        @include hook-subnav-item();
    }
}

/* Hover + Focus */
.uk-subnav > * > a:hover,
.uk-subnav > * > a:focus {
    color: $subnav-item-hover-color;
    text-decoration: $subnav-item-hover-text-decoration;
    outline: none;
    @if (mixin-exists(hook-subnav-item-hover)) {
        @include hook-subnav-item-hover();
    }
}

/* Active */
.uk-subnav > .uk-active > a {
    color: $subnav-item-active-color;
    @if (mixin-exists(hook-subnav-item-active)) {
        @include hook-subnav-item-active();
    }
}

/* Divider modifier
 ========================================================================== */

/*
 * 1. Align items and divider vertically
 */

.uk-subnav-divider > * {
    /* 1 */
    display: flex;
    align-items: center;
}

/*
 * Divider
 * `nth-child` makes it also work without JS if it's only one row
 */

.uk-subnav-divider > :nth-child(n+2):not(.uk-first-column)::before {
    content: "";
    height: $subnav-divider-border-height;
    margin-left: ($subnav-divider-margin-horizontal - $subnav-margin-horizontal);
    margin-right: $subnav-divider-margin-horizontal;
    border-left: $subnav-divider-border-width solid $subnav-divider-border;
    @if (mixin-exists(hook-subnav-divider)) {
        @include hook-subnav-divider();
    }
}

/* Pill modifier
 ========================================================================== */

.uk-subnav-pill > * > :first-child {
    padding: $subnav-pill-item-padding-vertical $subnav-pill-item-padding-horizontal;
    background: $subnav-pill-item-background;
    color: $subnav-pill-item-color;
    @if (mixin-exists(hook-subnav-pill-item)) {
        @include hook-subnav-pill-item();
    }
}

/* Hover + Focus */
.uk-subnav-pill > * > a:hover,
.uk-subnav-pill > * > a:focus {
    background-color: $subnav-pill-item-hover-background;
    color: $subnav-pill-item-hover-color;
    @if (mixin-exists(hook-subnav-pill-item-hover)) {
        @include hook-subnav-pill-item-hover();
    }
}

/* OnClick */
.uk-subnav-pill > * > a:active {
    background-color: $subnav-pill-item-onclick-background;
    color: $subnav-pill-item-onclick-color;
    @if (mixin-exists(hook-subnav-pill-item-onclick)) {
        @include hook-subnav-pill-item-onclick();
    }
}

/* Active */
.uk-subnav-pill > .uk-active > a {
    background-color: $subnav-pill-item-primary-active-background;
    color: $subnav-pill-item-primary-active-color;
    @if (mixin-exists(hook-subnav-pill-item-active)) {
        @include hook-subnav-pill-item-active();
    }
}

.uk-subnav-pill.uk-subnav-pill-secondary > .uk-active > a {
    background-color: $subnav-pill-item-secondary-active-background;
    color: $subnav-pill-item-secondary-active-color;
}

.uk-subnav-pill.uk-subnav-pill-success > .uk-active > a {
    background-color: $subnav-pill-item-success-active-background;
    color: $subnav-pill-item-success-active-color;
}

.uk-subnav-pill.uk-subnav-pill-danger > .uk-active > a {
    background-color: $subnav-pill-item-danger-active-background;
    color: $subnav-pill-item-danger-active-color;
}

.uk-subnav-pill.uk-subnav-pill-warning > .uk-active > a {
    background-color: $subnav-pill-item-warning-active-background;
    color: $subnav-pill-item-warning-active-color;
}

.uk-subnav-pill-rounded > * > a {
    @include border-radius($subnav-pill-item-border-rounded);
}

/* Disabled
 * The same for all style modifiers
 ========================================================================== */

.uk-subnav > .uk-disabled > a {
    color: $subnav-item-disabled-color;
    @if (mixin-exists(hook-subnav-item-disabled)) {
        @include hook-subnav-item-disabled();
    }
}

// Hooks
// ========================================================================

@if (mixin-exists(hook-subnav-misc)) {
    @include hook-subnav-misc();
}

// @mixin hook-subnav(){}
// @mixin hook-subnav-item(){}
// @mixin hook-subnav-item-hover(){}
// @mixin hook-subnav-item-active(){}
// @mixin hook-subnav-divider(){}
// @mixin hook-subnav-pill-item(){}
// @mixin hook-subnav-pill-item-hover(){}
// @mixin hook-subnav-pill-item-onclick(){}
// @mixin hook-subnav-pill-item-active(){}
// @mixin hook-subnav-item-disabled(){}
// @mixin hook-subnav-misc(){}

// Inverse
// ========================================================================

// @mixin hook-inverse-subnav-item(){}
// @mixin hook-inverse-subnav-item-hover(){}
// @mixin hook-inverse-subnav-item-active(){}
// @mixin hook-inverse-subnav-divider(){}
// @mixin hook-inverse-subnav-pill-item(){}
// @mixin hook-inverse-subnav-pill-item-hover(){}
// @mixin hook-inverse-subnav-pill-item-onclick(){}
// @mixin hook-inverse-subnav-pill-item-active(){}
// @mixin hook-inverse-subnav-item-disabled(){}
